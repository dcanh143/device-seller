# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
        environment:
          DATABASE_URL: postgresql://postgres@localhost/db_course?currentSchema=sc_course&ssl=false

      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: "1234"
          POSTGRES_DB: db_course
          POSTGRES_SCHEMA: sc_course
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
  deploy:
    machine: true
    steps:
      - checkout
      - run: |-
          cat >> ~/.netrc \<<EOF
            machine api.heroku.com
              login 20020074@vnu.edu.vn
              password ducanh202@
            machine git.heroku.com
              login 20020074@vnu.edu.vn
              password ducanh202@
          EOF
      - run: chmod 600 ~/.netrc
      - run: heroku git:remote -a pocket-learn-app
      - run: git push heroku master:master -f
      - run: heroku run rails db:migrate --app pocket-learn-app
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
